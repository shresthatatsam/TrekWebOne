
@{
    ViewBag.Title = "Fixed Book Now";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Trip Booking Form</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .continue-button {
            background-color: #00bfa5;
            color: #fff;
        }
        .continue-button:hover {
            background-color: #009e88;
        }
        #end-date {
            background-color: #e9ecef;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container py-4">
        <h2 class="mb-4">Book Your Trek</h2>
        <div class="row g-4">
            <!-- LEFT COLUMN: Dates & Pricing -->
            <div class="col-lg-7">
                <div class="card mb-4 shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Trek Dates & Pricing</h5>
                        <div class="row g-3 mb-3">
                            <div class="col-md-6">
                                <label for="start-date" class="form-label">Start Date</label>
                                <input type="text" id="start-date" class="form-control" readonly
                                       value="@ViewBag.FromDate.ToString("yyyy-MM-dd")" />
                            </div>
                            <div class="col-md-6">
                                <label for="end-date" class="form-label">End Date</label>
                                <input type="text" id="end-date" class="form-control" readonly
                                       value="@ViewBag.ToDate.ToString("yyyy-MM-dd")" />
                            </div>
                        </div>

                        <label for="people" class="form-label mt-2">Select Number of People</label>
                        <select id="people" class="form-select mb-2">
                            @for (int i = 1; i <= 25; i++)
                            {
                                <option value="@i">@i @(i == 1 ? "Person" : "People")</option>
                            }
                        </select>

                        <p id="price-note" class="text-success fw-bold">
                            Price per person: $@ViewBag.Price
                        </p>
                    </div>
                </div>
            </div>

            <!-- RIGHT COLUMN: Booking Summary & Form -->
            <div class="col-lg-5">
                <div class="card shadow-sm">
                    <div class="card-body">
                        <h5 class="card-title">Booking Summary</h5>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Dates:</span>
                            <span>@ViewBag.FromDate.ToString("MMM dd, yyyy") → @ViewBag.ToDate.ToString("MMM dd, yyyy")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>People:</span>
                            <span id="summary-people">1 Pax</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Total Price:</span>
                            <span id="summary-total">$@ViewBag.Price</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Due at Booking (30%):</span>
                            <span id="summary-deposit">$@(Math.Round((decimal)ViewBag.Price * 0.3m))</span>

                        </div>

                        <hr />

                        <h5 class="card-title mt-3">Traveler Information</h5>
                        <form id="traveler-form">
                            <div class="mb-3">
                                <label class="form-label">Name *</label>
                                <input type="text" name="traveler[name]" class="form-control" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Address *</label>
                                <input type="text" name="traveler[address]" class="form-control" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Mobile *</label>
                                <input type="tel" name="traveler[mobile]" class="form-control" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Email *</label>
                                <input type="email" name="traveler[email]" class="form-control" required>
                            </div>
                            <button type="submit" class="btn continue-button w-100">Continue</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        const peopleSelect = document.getElementById("people");
        const summaryPeople = document.getElementById("summary-people");
        const summaryTotal = document.getElementById("summary-total");
        const summaryDeposit = document.getElementById("summary-deposit");
        const priceNote = document.getElementById("price-note");
        const travelerForm = document.getElementById("traveler-form");

        const pricePerPerson = parseFloat('@ViewBag.Price');
        const stripePublicKey = '@ViewBag.StripePublishableKey';
        const fromDate = '@ViewBag.FromDate.ToString("yyyy-MM-dd")';
        const toDate = '@ViewBag.ToDate.ToString("yyyy-MM-dd")';

        function updateTotal() {
            const peopleCount = parseInt(peopleSelect.value);
            const total = pricePerPerson * peopleCount;
            const deposit = Math.round(total * 0.3);

            summaryPeople.textContent = `${peopleCount} ${peopleCount === 1 ? "Pax" : "Pax"}`;
            summaryTotal.textContent = `$${total.toLocaleString()}`;
            summaryDeposit.textContent = `$${deposit.toLocaleString()}`;
            priceNote.textContent = `Price per person: $${pricePerPerson.toLocaleString()}`;
        }

        peopleSelect.addEventListener("change", updateTotal);
        updateTotal();

        travelerForm.addEventListener("submit", async function (e) {
            e.preventDefault();
            const formData = new FormData(travelerForm);

            const tripData = {
                startDate: fromDate,
                endDate: toDate,
                peopleCount: parseInt(peopleSelect.value),
                pricePerPerson: pricePerPerson,
                totalPrice: pricePerPerson * parseInt(peopleSelect.value),
                traveler: {
                    name: formData.get("traveler[name]"),
                    address: formData.get("traveler[address]"),
                    mobile: formData.get("traveler[mobile]"),
                    email: formData.get("traveler[email]")
                }
            };

            try {
                const response = await fetch('/TrekPackage/BookAndPay', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(tripData)
                });
                const result = await response.json();
                if (result.sessionId) {
                    const stripe = Stripe(stripePublicKey);
                    await stripe.redirectToCheckout({ sessionId: result.sessionId });
                } else {
                    alert("Error processing payment. Please try again.");
                }
            } catch (err) {
                console.error(err);
                alert("An unexpected error occurred.");
            }
        });
    </script>
</body>
</html>
